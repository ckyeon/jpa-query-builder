package persistence.sql.ddl;

import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.Arguments;
import org.junit.jupiter.params.provider.MethodSource;
import persistence.sql.dialect.H2Dialect;
import persistence.sql.model.Table;
import persistence.study.sql.ddl.Person1;
import persistence.study.sql.ddl.Person2;
import persistence.study.sql.ddl.Person3;

import java.util.stream.Stream;

import static org.assertj.core.api.Assertions.assertThat;

class CreateQueryBuilderTest {

    @DisplayName("Person을 이용하여 create 쿼리 생성하기")
    @ParameterizedTest
    @MethodSource
    void build(Table table, String createQuery) {
        H2Dialect dialect = new H2Dialect();
        CreateQueryBuilder createQueryBuilder = new CreateQueryBuilder(table, dialect);

        String result = createQueryBuilder.build();

        assertThat(result).isEqualTo(createQuery);
    }

    private static Stream<Arguments> build() {
        return Stream.of(
                Arguments.arguments(new Table(Person1.class), "CREATE TABLE person1 (id bigint primary key,name varchar,age integer);"),
                Arguments.arguments(new Table(Person2.class), "CREATE TABLE person2 (id bigint generated by default as identity default on null primary key,nick_name varchar,old integer,email varchar not null);"),
                Arguments.arguments(new Table(Person3.class), "CREATE TABLE users (id bigint generated by default as identity default on null primary key,nick_name varchar,old integer,email varchar not null);")
        );
    }
}
